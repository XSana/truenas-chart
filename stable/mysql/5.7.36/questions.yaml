groups:
  - name: "Container Images"
    description: "Image to be used for container"
  - name: "MySQL Configuration"
    description: "Configuration details for MySQL"
  - name: "Storage"
    description: "Configure Storage for MySQL"
  - name: "Scaling/Upgrade Policy"
    description: "Configure how pods are replaced when configuration is upgraded"
  - name: "Advanced DNS Settings"
    description: "Configure DNS settings"

questions:
  - variable: mysql
    description: "MySQL配置明细"
    label: "MySQL配置"
    group: "MySQL Configuration"
    schema:
      type: dict
      required: true
      additional_attrs: true
      attrs:
        - variable: rootpassword
          label: "Root Password"
          description: "MySQL root默认密码"
          schema:
            type: string
            private: true
            default: ""
            required: true

  - variable: appVolumeMounts
    label: "MySQL存储"
    group: "Storage"
    schema:
      type: dict
      attrs:
        - variable: mysql-data
          label: "MySQL数据卷"
          schema:
            type: dict
            attrs:
              - variable: hostPathEnabled
                label: "启用本地存储"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "MySQL数据卷本地路径"
                      schema:
                        type: hostpath
                        required: true
  - variable: updateStrategy
    description: "Upgrade Policy"
    label: "Update Strategy"
    group: "Scaling/Upgrade Policy"
    schema:
      type: string
      default: "Recreate"
      enum:
        - value: "RollingUpdate"
          description: "Create new pods and then kill old ones"
        - value: "Recreate"
          description: "Kill existing pods before creating new ones"
  - variable: dnsConfig
    label: "DNS Configuration"
    group: "Advanced DNS Settings"
    schema:
      type: dict
      attrs:
        - variable: options
          label: "DNS Options"
          schema:
            type: list
            items:
              - variable: optionsEntry
                label: "Option Entry Configuration"
                schema:
                  type: dict
                  attrs:
                    - variable: name
                      label: "Option Name"
                      schema:
                        type: string
                        required: true
                    - variable: value
                      label: "Option Value"
                      schema:
                        type: string
                        required: true
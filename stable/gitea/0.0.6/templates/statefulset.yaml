apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "common.names.fullname" . }}
  labels: 
    name: gitea
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels: 
      name: gitea
  serviceName: gitea
  template:
    metadata:
      labels: 
        name: gitea
    spec:
      hostNetwork: true
      containers:
      - name: {{ .Chart.Name }}
        image: gitea:1.15.6
        imagePullPolicy: IfNotPresent
        ports:
        - name: gitea
          containerPort: 3000
          hostPort: 3000
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/timezone
          name: sys-timezone
          readOnly: true
        - mountPath: /etc/localtime
          name: sys-localtime
          readOnly: true
        - mountPath: /data
          name: gitea-data
          subPath: data
        {{ range $index, $hostPathConfiguration := .Values.extraAppVolumeMounts }}
        - name: extrappvolume-{{ $index }}
          mountPath: {{ $hostPathConfiguration.mountPath }}
        {{ end }}
        env: {{ $envList := (default list .Values.environmentVariables) }}
        {{ $envList = mustAppend $envList (dict "name" "USER_UID" "value" .Values.uid) }}
        {{ $envList = mustAppend $envList (dict "name" "USER_GID" "value" .Values.gid) }}
        {{ $envList = mustAppend $envList (dict "name" "DB_TYPE" "value" "mysql") }}
        {{ $envList = mustAppend $envList (dict "name" "DB_HOST" "value" .Values.mysqlHost) }}
        {{ $envList = mustAppend $envList (dict "name" "DB_NAME" "value" .Values.mysqlDbName) }}
        {{ $envList = mustAppend $envList (dict "name" "DB_USER" "value" .Values.mysqlUser) }}
        {{ $envList = mustAppend $envList (dict "name" "DB_PASSWD" "value" .Values.mysqlPassword) }}
        {{ $envList = mustAppend $envList (dict "name" "DISABLE_SSH" "value" .Values.disablessh) }}
        {{ $envList = mustAppend $envList (dict "name" "DISABLE_REGISTRATION" "value" .Values.disablereg) }}
        {{ include "common.containers.environmentVariables" (dict "environmentVariables" $envList) | nindent 12 }}
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources: {}
        startupProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 10
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 200
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 10
      volumes:
      - name: sys-timezone
        hostPath:
          path: /etc/timezone
      - name: sys-localtime
        hostPath:
          path: /etc/localtime
      {{ range $index, $hostPathConfiguration := .Values.extraAppVolumeMounts }}
      - name: extrappvolume-{{ $index }}
        hostPath:
          path: {{ $hostPathConfiguration.hostPath }}
      {{ end }}
{{ if .Values.appVolumeMounts }}
{{ include "common.storage.configureAppVolumes" .Values | nindent 6 }}
{{ end }}
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate